version: '3.3'
services:

  mongodb-primary:
    image: 'bitnami/mongodb:latest'
    container_name: mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_KEY}
    volumes:
      - 'mongodb_master_data:/bitnami'
      - ./mongo-data:/data/db
    networks:    
      - app-tier

  mongodb-secondary:
    image: 'bitnami/mongodb:latest'
    container_name: mongodb-secondary
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=${MONGODB_PORT_NUMBER}
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_KEY}
    networks:    
      - app-tier

  mongodb-arbiter:
    image: 'bitnami/mongodb:latest'
    container_name: mongodb-arbiter
    depends_on:
      - mongodb-primary
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
      - MONGODB_REPLICA_SET_MODE=arbiter
      - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
      - MONGODB_INITIAL_PRIMARY_PORT_NUMBER=${MONGODB_PORT_NUMBER}
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_REPLICA_SET_KEY=${MONGODB_REPLICA_KEY}
    networks:    
      - app-tier
      
  server:
    build: .
    container_name: loopback_server
    networks:    
      - app-tier
    volumes:
      - /app/node_modules
      - .:/app
    ports:
      - '3000:3000'
    environment:
      - MONGO_URL=${MONGO_URL}
      - RABBIT_URL=${RABBIT_URL}
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
      - rabbitmq
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:    
      - app-tier

  notification:
    build:
      dockerfile: Dockerfile
      context: ./notification
    container_name: notification
    environment:
      - RABBIT_URL=${RABBIT_URL}
    depends_on:
      - rabbitmq
    networks:    
      - app-tier
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_USERNAME=${ELASTIC_USERNAME}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    expose:
      - 9200
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "http://elastic:IwWE9VnKw1pu2pedh8xKwMnQ@localhost:9200"]
      interval: 60s
      timeout: 15s
      retries: 3
      # start_period: 120s
    networks:
      - app-tier
      
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    environment:
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
      ELASTICSEARCH_USERNAME: ${ELASTIC_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTICSEARCH_SSL_VERIFY: "false"  
    networks:
      - app-tier
    ports:
      - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_healthy

  monstache:
    image: rwynn/monstache:6.7.2
    container_name: c-monstache
    working_dir: /app
    command: -f ./monstache.config.toml 
    volumes:
      - ./monstache.config.toml:/app/monstache.config.toml
      # - ./plugin/plugin.so:/app/plugin.so
    depends_on:
      - elasticsearch
        # condition: service_healthy
      - mongodb-primary
        # condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - app-tier
    healthcheck:
      test: "wget -q -O - http://localhost:8080/healthz"
      interval: 10s
      timeout: 30s
      retries: 300
    restart: unless-stopped

volumes:
  mongodb_master_data:
    driver: local
  esdata:

networks:
  app-tier:
    driver: bridge